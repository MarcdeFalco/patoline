(*
  Copyright Florian Hatat, Tom Hirschowitz, Pierre Hyvernat,
  Pierre-Etienne Meunier, Christophe Raffalli, Guillaume Theyssier 2012.

  This file is part of Patoline.

  Patoline is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Patoline is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with Patoline.  If not, see <http://www.gnu.org/licenses/>.
*)

\Caml(
let my_new_page pageFormat t=
  let background=
    List.map (fun x-> in_order (-1) x)
    (Document.draw defaultEnv (includeGraphics ~scale:(1.0) "labyrinthe_background.png"))
  in  
  
  let a,b=Box.make_page pageFormat (frame_top t) in
  let zip={ a with frame_tags=["page"];
   frame_content=[Box.Raw background] },b in
  let w=(fst zip).frame_x1-.(fst zip).frame_x0
  and h=(fst zip).frame_y1-.(fst zip).frame_y0 in
  let x0=((fst zip).frame_x0+.1.*.w/.6.) in
  let y0=((fst zip).frame_y0+.1.*.h/.6.) in
  let x1=((fst zip).frame_x1-.1.*.w/.6.) in
  let y1=((fst zip).frame_y1-.1.*.h/.6.) in
  frame x0 y0 x1 y1 zip

let defaultEnv  = { defaultEnv with new_page=my_new_page a4 }
)

===================================
ImageLib Test
===================================


\Caml(
let files = Sys.readdir "test_images"
let _ = Array.sort compare files

let _ = Array.iter (fun fn ->
  try 
    if Str.(search_forward (regexp_string ".") fn 0 >= 2) then
      let drawing env=drawing (draw_boxes env (boxify_scoped env (
	Printf.printf "%s\n%!" fn;
	includeGraphics ~height:40. ("test_images/" ^ fn)))) in
      figure_here ~caption:[tT fn] drawing;
  with Not_found -> ()) files
)

